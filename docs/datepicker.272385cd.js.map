{"version":3,"sources":["../../components/calendar/datepicker.js"],"names":["window","$","undefined","$body","$datepickersContainer","datepicker","containerBuilt","defaults","hotKeys","Datepicker","classes","inline","language","startDate","Date","firstDay","weekends","dateFormat","altField","altFieldDateFormat","toggleSelected","keyboardNav","position","offset","view","minView","showOtherMonths","selectOtherMonths","moveToOtherMonthsOnSelect","showOtherYears","selectOtherYears","moveToOtherYearsOnSelect","minDate","maxDate","disableNavWhenOutOfRange","multipleDates","multipleDatesSeparator","range","todayButton","clearButton","showEvent","autoClose","monthsField","prevHtml","nextHtml","navTitles","days","months","years","timepicker","onlyTimepicker","dateTimeSeparator","timeFormat","minHours","maxHours","minMinutes","maxMinutes","hoursStep","minutesStep","onSelect","onShow","onHide","onChangeMonth","onChangeYear","onChangeDecade","onChangeView","onRenderCell","el","options","$el","opts","extend","data","nodeName","elIsInput","$altField","inited","visible","silent","currentDate","currentView","_createShortCuts","selectedDates","views","keys","minRange","maxRange","_prevOnSelectValue","init","prototype","VERSION","viewIndexes","_buildDatepickersContainer","_buildBaseHtml","_defineLocale","_syncWithMinMaxDates","_setPositionClasses","_bindEvents","_bindKeyboardEvents","$datepicker","on","_onMouseDownDatepicker","bind","_onMouseUpDatepicker","addClass","fn","Timepicker","_bindTimepickerEvents","Body","show","nav","Navigation","_onClickCell","_onMouseEnterCell","_onMouseLeaveCell","_onShowEvent","_onMouseUpEl","_onBlur","_onKeyUpGeneral","_onResize","_onMouseUpBody","_onKeyDown","_onKeyUp","_onHotKey","_onTimeChange","isWeekend","day","indexOf","lang","loc","console","warn","ru","join","boundary","_getWordBoundaryRegExp","match","ampm","append","$appendTarget","$inline","insertAfter","appendTo","$content","$nav","_triggerOnChange","length","formattedDates","parsedSelected","getParsedDate","_this","dates","year","month","date","hours","minutes","map","formatDate","parsedDate","next","d","o","curDecade","prev","string","result","validHours","locale","leadingZero","getLeadingZeroNum","decade","getDecade","fullHours","dayPeriod","replacer","_replacer","_getValidHoursFromDate","test","replace","getTime","toUpperCase","fullDate","daysShort","fullMonth","monthsShort","fullMinutes","toString","slice","str","reg","p1","p2","p3","sign","symbols","RegExp","selectDate","len","newDate","Array","isArray","forEach","lastSelectedDate","_setTime","_trigger","setHours","setMinutes","getMonth","getFullYear","_render","_isSelected","push","bigger","_setInputValue","timepickerIsActive","hide","removeDate","selected","some","curDate","i","isSame","splice","today","clear","update","param","value","arguments","_addButtonsIfNeed","setPosition","_handleDate","_updateRanges","_updateCurrentTime","curTime","minTime","maxTime","checkDate","cellType","res","altValues","format","altFormat","val","_isInRange","type","time","min","max","dMinTime","dMaxTime","types","_getDimensions","width","outerWidth","height","outerHeight","left","top","_getDateFromCell","cell","pos","main","split","removeAttr","dims","selfDims","secondary","css","_bindVisionEvents","removeClass","focused","inFocus","blur","down","_changeView","up","event","off","one","dir","nextView","viewIndex","_handleHotKey","key","focusedParsed","totalDaysInNextMonth","_getFocusedDate","monthChanged","yearChanged","decadeChanged","y","m","getDaysCount","_registerKey","curKey","_unRegisterKey","index","_isHotKeyPressed","currentHotKey","found","pressedKeys","sort","hotKey","every","args","trigger","_focusNextCell","keyCode","nd","getDate","_getCell","$cell","selector","find","destroy","closest","remove","_handleAlreadySelectedDates","alreadySelected","selectedDate","e","originalEvent","timepickerFocus","focus","setTimeout","code","which","preventDefault","hasClass","target","less","_update","h","_focused","prevView","substring","getDay","getHours","getMinutes","firstYear","Math","floor","template","source","date1","date2","d1","d2","_type","conditions","dateCompareTo","num","parseInt","resetTime","each","Constructor","daysMin","templates","dp","proxy","$names","$cells","_getDayNamesHtml","curDay","html","_getCellContents","parent","render","disabled","_getDaysHtml","totalMonthDays","firstMonthDay","lastMonthDay","daysFromPevMonth","daysFromNextMonth","_getDayHtml","content","_getMonthsHtml","_getMonthHtml","_getYearsHtml","_getYearHtml","_renderTypes","dayNames","attr","acitve","active","_handleClick","$buttonsContainer","_onClickNavButton","_addButton","title","_getTitle","setNavStatus","_addButtonsContainer","action","label","_disableNav","_activateNav","_onClickNavTitle","inst","input","_buildHTML","navigator","userAgent","_onSelectDate","$ranges","_onChangeRange","_onMouseUpRange","_onMouseEnterRange","_onMouseOutRange","_date","_setMinTimeFromDate","_setMaxTimeFromDate","_setDefaultMinMaxTime","_validateHoursMinutes","lz","hourMin","hourMax","hourStep","hourValue","hourVisible","displayHours","minMin","minMax","minStep","minValue","_template","$timepicker","$hours","$minutes","$hoursText","$minutesText","$ampm","_ampm","_hours","$target","name","jQuery"],"mappings":"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","file":"datepicker.272385cd.js","sourceRoot":"..\\src\\pages\\index","sourcesContent":[";(function (window, $, undefined) { ;(function () {\n    var VERSION = '2.2.3',\n        pluginName = 'datepicker',\n        autoInitSelector = '.datepicker-here',\n        $body, $datepickersContainer,\n        containerBuilt = false,\n        baseTemplate = '' +\n            '<div class=\"datepicker\">' +\n            '<nav class=\"datepicker--nav\"></nav>' +\n            '<div class=\"datepicker--content\"></div>' +\n            '</div>',\n        defaults = {\n            classes: '',\n            inline: false,\n            language: 'ru',\n            startDate: new Date(),\n            firstDay: '',\n            weekends: [6, 0],\n            dateFormat: '',\n            altField: '',\n            altFieldDateFormat: '@',\n            toggleSelected: true,\n            keyboardNav: true,\n\n            position: 'bottom left',\n            offset: 12,\n\n            view: 'days',\n            minView: 'days',\n\n            showOtherMonths: true,\n            selectOtherMonths: true,\n            moveToOtherMonthsOnSelect: true,\n\n            showOtherYears: true,\n            selectOtherYears: true,\n            moveToOtherYearsOnSelect: true,\n\n            minDate: '',\n            maxDate: '',\n            disableNavWhenOutOfRange: true,\n\n            multipleDates: false, // Boolean or Number\n            multipleDatesSeparator: ',',\n            range: false,\n\n            todayButton: false,\n            clearButton: false,\n\n            showEvent: 'focus',\n            autoClose: false,\n\n            // navigation\n            monthsField: 'monthsShort',\n            prevHtml: '<svg><path d=\"M 17,12 l -5,5 l 5,5\"></path></svg>',\n            nextHtml: '<svg><path d=\"M 14,12 l 5,5 l -5,5\"></path></svg>',\n            navTitles: {\n                days: 'MM, <i>yyyy</i>',\n                months: 'yyyy',\n                years: 'yyyy1 - yyyy2'\n            },\n\n            // timepicker\n            timepicker: false,\n            onlyTimepicker: false,\n            dateTimeSeparator: ' ',\n            timeFormat: '',\n            minHours: 0,\n            maxHours: 24,\n            minMinutes: 0,\n            maxMinutes: 59,\n            hoursStep: 1,\n            minutesStep: 1,\n\n            // events\n            onSelect: '',\n            onShow: '',\n            onHide: '',\n            onChangeMonth: '',\n            onChangeYear: '',\n            onChangeDecade: '',\n            onChangeView: '',\n            onRenderCell: ''\n        },\n        hotKeys = {\n            'ctrlRight': [17, 39],\n            'ctrlUp': [17, 38],\n            'ctrlLeft': [17, 37],\n            'ctrlDown': [17, 40],\n            'shiftRight': [16, 39],\n            'shiftUp': [16, 38],\n            'shiftLeft': [16, 37],\n            'shiftDown': [16, 40],\n            'altUp': [18, 38],\n            'altRight': [18, 39],\n            'altLeft': [18, 37],\n            'altDown': [18, 40],\n            'ctrlShiftUp': [16, 17, 38]\n        },\n        datepicker;\n\n    var Datepicker  = function (el, options) {\n        this.el = el;\n        this.$el = $(el);\n\n        this.opts = $.extend(true, {}, defaults, options, this.$el.data());\n\n        if ($body == undefined) {\n            $body = $('body');\n        }\n\n        if (!this.opts.startDate) {\n            this.opts.startDate = new Date();\n        }\n\n        if (this.el.nodeName == 'INPUT') {\n            this.elIsInput = true;\n        }\n\n        if (this.opts.altField) {\n            this.$altField = typeof this.opts.altField == 'string' ? $(this.opts.altField) : this.opts.altField;\n        }\n\n        this.inited = false;\n        this.visible = false;\n        this.silent = false; // Need to prevent unnecessary rendering\n\n        this.currentDate = this.opts.startDate;\n        this.currentView = this.opts.view;\n        this._createShortCuts();\n        this.selectedDates = [];\n        this.views = {};\n        this.keys = [];\n        this.minRange = '';\n        this.maxRange = '';\n        this._prevOnSelectValue = '';\n\n        this.init()\n    };\n\n    datepicker = Datepicker;\n\n    datepicker.prototype = {\n        VERSION: VERSION,\n        viewIndexes: ['days', 'months', 'years'],\n\n        init: function () {\n            if (!containerBuilt && !this.opts.inline && this.elIsInput) {\n                this._buildDatepickersContainer();\n            }\n            this._buildBaseHtml();\n            this._defineLocale(this.opts.language);\n            this._syncWithMinMaxDates();\n\n            if (this.elIsInput) {\n                if (!this.opts.inline) {\n                    // Set extra classes for proper transitions\n                    this._setPositionClasses(this.opts.position);\n                    this._bindEvents()\n                }\n                if (this.opts.keyboardNav && !this.opts.onlyTimepicker) {\n                    this._bindKeyboardEvents();\n                }\n                this.$datepicker.on('mousedown', this._onMouseDownDatepicker.bind(this));\n                this.$datepicker.on('mouseup', this._onMouseUpDatepicker.bind(this));\n            }\n\n            if (this.opts.classes) {\n                this.$datepicker.addClass(this.opts.classes)\n            }\n\n            if (this.opts.timepicker) {\n                this.timepicker = new $.fn.datepicker.Timepicker(this, this.opts);\n                this._bindTimepickerEvents();\n            }\n\n            if (this.opts.onlyTimepicker) {\n                this.$datepicker.addClass('-only-timepicker-');\n            }\n\n            this.views[this.currentView] = new $.fn.datepicker.Body(this, this.currentView, this.opts);\n            this.views[this.currentView].show();\n            this.nav = new $.fn.datepicker.Navigation(this, this.opts);\n            this.view = this.currentView;\n\n            this.$el.on('clickCell.adp', this._onClickCell.bind(this));\n            this.$datepicker.on('mouseenter', '.datepicker--cell', this._onMouseEnterCell.bind(this));\n            this.$datepicker.on('mouseleave', '.datepicker--cell', this._onMouseLeaveCell.bind(this));\n\n            this.inited = true;\n        },\n\n        _createShortCuts: function () {\n            this.minDate = this.opts.minDate ? this.opts.minDate : new Date(-8639999913600000);\n            this.maxDate = this.opts.maxDate ? this.opts.maxDate : new Date(8639999913600000);\n        },\n\n        _bindEvents : function () {\n            this.$el.on(this.opts.showEvent + '.adp', this._onShowEvent.bind(this));\n            this.$el.on('mouseup.adp', this._onMouseUpEl.bind(this));\n            this.$el.on('blur.adp', this._onBlur.bind(this));\n            this.$el.on('keyup.adp', this._onKeyUpGeneral.bind(this));\n            $(window).on('resize.adp', this._onResize.bind(this));\n            $('body').on('mouseup.adp', this._onMouseUpBody.bind(this));\n        },\n\n        _bindKeyboardEvents: function () {\n            this.$el.on('keydown.adp', this._onKeyDown.bind(this));\n            this.$el.on('keyup.adp', this._onKeyUp.bind(this));\n            this.$el.on('hotKey.adp', this._onHotKey.bind(this));\n        },\n\n        _bindTimepickerEvents: function () {\n            this.$el.on('timeChange.adp', this._onTimeChange.bind(this));\n        },\n\n        isWeekend: function (day) {\n            return this.opts.weekends.indexOf(day) !== -1;\n        },\n\n        _defineLocale: function (lang) {\n            if (typeof lang == 'string') {\n                this.loc = $.fn.datepicker.language[lang];\n                if (!this.loc) {\n                    console.warn('Can\\'t find language \"' + lang + '\" in Datepicker.language, will use \"ru\" instead');\n                    this.loc = $.extend(true, {}, $.fn.datepicker.language.ru)\n                }\n\n                this.loc = $.extend(true, {}, $.fn.datepicker.language.ru, $.fn.datepicker.language[lang])\n            } else {\n                this.loc = $.extend(true, {}, $.fn.datepicker.language.ru, lang)\n            }\n\n            if (this.opts.dateFormat) {\n                this.loc.dateFormat = this.opts.dateFormat\n            }\n\n            if (this.opts.timeFormat) {\n                this.loc.timeFormat = this.opts.timeFormat\n            }\n\n            if (this.opts.firstDay !== '') {\n                this.loc.firstDay = this.opts.firstDay\n            }\n\n            if (this.opts.timepicker) {\n                this.loc.dateFormat = [this.loc.dateFormat, this.loc.timeFormat].join(this.opts.dateTimeSeparator);\n            }\n\n            if (this.opts.onlyTimepicker) {\n                this.loc.dateFormat = this.loc.timeFormat;\n            }\n\n            var boundary = this._getWordBoundaryRegExp;\n            if (this.loc.timeFormat.match(boundary('aa')) ||\n                this.loc.timeFormat.match(boundary('AA'))\n            ) {\n               this.ampm = true;\n            }\n        },\n\n        _buildDatepickersContainer: function () {\n            containerBuilt = true;\n            $body.append('<div class=\"datepickers-container\" id=\"datepickers-container\"></div>');\n            $datepickersContainer = $('#datepickers-container');\n        },\n\n        _buildBaseHtml: function () {\n            var $appendTarget,\n                $inline = $('<div class=\"datepicker-inline\">');\n\n            if(this.el.nodeName == 'INPUT') {\n                if (!this.opts.inline) {\n                    $appendTarget = $datepickersContainer;\n                } else {\n                    $appendTarget = $inline.insertAfter(this.$el)\n                }\n            } else {\n                $appendTarget = $inline.appendTo(this.$el)\n            }\n\n            this.$datepicker = $(baseTemplate).appendTo($appendTarget);\n            this.$content = $('.datepicker--content', this.$datepicker);\n            this.$nav = $('.datepicker--nav', this.$datepicker);\n        },\n\n        _triggerOnChange: function () {\n            if (!this.selectedDates.length) {\n                // Prevent from triggering multiple onSelect callback with same argument (empty string) in IE10-11\n                if (this._prevOnSelectValue === '') return;\n                this._prevOnSelectValue = '';\n                return this.opts.onSelect('', '', this);\n            }\n\n            var selectedDates = this.selectedDates,\n                parsedSelected = datepicker.getParsedDate(selectedDates[0]),\n                formattedDates,\n                _this = this,\n                dates = new Date(\n                    parsedSelected.year,\n                    parsedSelected.month,\n                    parsedSelected.date,\n                    parsedSelected.hours,\n                    parsedSelected.minutes\n                );\n\n                formattedDates = selectedDates.map(function (date) {\n                    return _this.formatDate(_this.loc.dateFormat, date)\n                }).join(this.opts.multipleDatesSeparator);\n\n            // Create new dates array, to separate it from original selectedDates\n            if (this.opts.multipleDates || this.opts.range) {\n                dates = selectedDates.map(function(date) {\n                    var parsedDate = datepicker.getParsedDate(date);\n                    return new Date(\n                        parsedDate.year,\n                        parsedDate.month,\n                        parsedDate.date,\n                        parsedDate.hours,\n                        parsedDate.minutes\n                    );\n                })\n            }\n\n            this._prevOnSelectValue = formattedDates;\n            this.opts.onSelect(formattedDates, dates, this);\n        },\n\n        next: function () {\n            var d = this.parsedDate,\n                o = this.opts;\n            switch (this.view) {\n                case 'days':\n                    this.date = new Date(d.year, d.month + 1, 1);\n                    if (o.onChangeMonth) o.onChangeMonth(this.parsedDate.month, this.parsedDate.year);\n                    break;\n                case 'months':\n                    this.date = new Date(d.year + 1, d.month, 1);\n                    if (o.onChangeYear) o.onChangeYear(this.parsedDate.year);\n                    break;\n                case 'years':\n                    this.date = new Date(d.year + 10, 0, 1);\n                    if (o.onChangeDecade) o.onChangeDecade(this.curDecade);\n                    break;\n            }\n        },\n\n        prev: function () {\n            var d = this.parsedDate,\n                o = this.opts;\n            switch (this.view) {\n                case 'days':\n                    this.date = new Date(d.year, d.month - 1, 1);\n                    if (o.onChangeMonth) o.onChangeMonth(this.parsedDate.month, this.parsedDate.year);\n                    break;\n                case 'months':\n                    this.date = new Date(d.year - 1, d.month, 1);\n                    if (o.onChangeYear) o.onChangeYear(this.parsedDate.year);\n                    break;\n                case 'years':\n                    this.date = new Date(d.year - 10, 0, 1);\n                    if (o.onChangeDecade) o.onChangeDecade(this.curDecade);\n                    break;\n            }\n        },\n\n        formatDate: function (string, date) {\n            date = date || this.date;\n            var result = string,\n                boundary = this._getWordBoundaryRegExp,\n                locale = this.loc,\n                leadingZero = datepicker.getLeadingZeroNum,\n                decade = datepicker.getDecade(date),\n                d = datepicker.getParsedDate(date),\n                fullHours = d.fullHours,\n                hours = d.hours,\n                ampm = string.match(boundary('aa')) || string.match(boundary('AA')),\n                dayPeriod = 'am',\n                replacer = this._replacer,\n                validHours;\n\n            if (this.opts.timepicker && this.timepicker && ampm) {\n                validHours = this.timepicker._getValidHoursFromDate(date, ampm);\n                fullHours = leadingZero(validHours.hours);\n                hours = validHours.hours;\n                dayPeriod = validHours.dayPeriod;\n            }\n\n            switch (true) {\n                case /@/.test(result):\n                    result = result.replace(/@/, date.getTime());\n                case /aa/.test(result):\n                    result = replacer(result, boundary('aa'), dayPeriod);\n                case /AA/.test(result):\n                    result = replacer(result, boundary('AA'), dayPeriod.toUpperCase());\n                case /dd/.test(result):\n                    result = replacer(result, boundary('dd'), d.fullDate);\n                case /d/.test(result):\n                    result = replacer(result, boundary('d'), d.date);\n                case /DD/.test(result):\n                    result = replacer(result, boundary('DD'), locale.days[d.day]);\n                case /D/.test(result):\n                    result = replacer(result, boundary('D'), locale.daysShort[d.day]);\n                case /mm/.test(result):\n                    result = replacer(result, boundary('mm'), d.fullMonth);\n                case /m/.test(result):\n                    result = replacer(result, boundary('m'), d.month + 1);\n                case /MM/.test(result):\n                    result = replacer(result, boundary('MM'), this.loc.months[d.month]);\n                case /M/.test(result):\n                    result = replacer(result, boundary('M'), locale.monthsShort[d.month]);\n                case /ii/.test(result):\n                    result = replacer(result, boundary('ii'), d.fullMinutes);\n                case /i/.test(result):\n                    result = replacer(result, boundary('i'), d.minutes);\n                case /hh/.test(result):\n                    result = replacer(result, boundary('hh'), fullHours);\n                case /h/.test(result):\n                    result = replacer(result, boundary('h'), hours);\n                case /yyyy/.test(result):\n                    result = replacer(result, boundary('yyyy'), d.year);\n                case /yyyy1/.test(result):\n                    result = replacer(result, boundary('yyyy1'), decade[0]);\n                case /yyyy2/.test(result):\n                    result = replacer(result, boundary('yyyy2'), decade[1]);\n                case /yy/.test(result):\n                    result = replacer(result, boundary('yy'), d.year.toString().slice(-2));\n            }\n\n            return result;\n        },\n\n        _replacer: function (str, reg, data) {\n            return str.replace(reg, function (match, p1,p2,p3) {\n                return p1 + data + p3;\n            })\n        },\n\n        _getWordBoundaryRegExp: function (sign) {\n            var symbols = '\\\\s|\\\\.|-|/|\\\\\\\\|,|\\\\$|\\\\!|\\\\?|:|;';\n\n            return new RegExp('(^|>|' + symbols + ')(' + sign + ')($|<|' + symbols + ')', 'g');\n        },\n\n\n        selectDate: function (date) {\n            var _this = this,\n                opts = _this.opts,\n                d = _this.parsedDate,\n                selectedDates = _this.selectedDates,\n                len = selectedDates.length,\n                newDate = '';\n\n            if (Array.isArray(date)) {\n                date.forEach(function (d) {\n                    _this.selectDate(d)\n                });\n                return;\n            }\n\n            if (!(date instanceof Date)) return;\n\n            this.lastSelectedDate = date;\n\n            // Set new time values from Date\n            if (this.timepicker) {\n                this.timepicker._setTime(date);\n            }\n\n            // On this step timepicker will set valid values in it's instance\n            _this._trigger('selectDate', date);\n\n            // Set correct time values after timepicker's validation\n            // Prevent from setting hours or minutes which values are lesser then `min` value or\n            // greater then `max` value\n            if (this.timepicker) {\n                date.setHours(this.timepicker.hours);\n                date.setMinutes(this.timepicker.minutes)\n            }\n\n            if (_this.view == 'days') {\n                if (date.getMonth() != d.month && opts.moveToOtherMonthsOnSelect) {\n                    newDate = new Date(date.getFullYear(), date.getMonth(), 1);\n                }\n            }\n\n            if (_this.view == 'years') {\n                if (date.getFullYear() != d.year && opts.moveToOtherYearsOnSelect) {\n                    newDate = new Date(date.getFullYear(), 0, 1);\n                }\n            }\n\n            if (newDate) {\n                _this.silent = true;\n                _this.date = newDate;\n                _this.silent = false;\n                _this.nav._render()\n            }\n\n            if (opts.multipleDates && !opts.range) { // Set priority to range functionality\n                if (len === opts.multipleDates) return;\n                if (!_this._isSelected(date)) {\n                    _this.selectedDates.push(date);\n                }\n            } else if (opts.range) {\n                if (len == 2) {\n                    _this.selectedDates = [date];\n                    _this.minRange = date;\n                    _this.maxRange = '';\n                } else if (len == 1) {\n                    _this.selectedDates.push(date);\n                    if (!_this.maxRange){\n                        _this.maxRange = date;\n                    } else {\n                        _this.minRange = date;\n                    }\n                    // Swap dates if they were selected via dp.selectDate() and second date was smaller then first\n                    if (datepicker.bigger(_this.maxRange, _this.minRange)) {\n                        _this.maxRange = _this.minRange;\n                        _this.minRange = date;\n                    }\n                    _this.selectedDates = [_this.minRange, _this.maxRange]\n\n                } else {\n                    _this.selectedDates = [date];\n                    _this.minRange = date;\n                }\n            } else {\n                _this.selectedDates = [date];\n            }\n\n            _this._setInputValue();\n\n            if (opts.onSelect) {\n                _this._triggerOnChange();\n            }\n\n            if (opts.autoClose && !this.timepickerIsActive) {\n                if (!opts.multipleDates && !opts.range) {\n                    _this.hide();\n                } else if (opts.range && _this.selectedDates.length == 2) {\n                    _this.hide();\n                }\n            }\n\n            _this.views[this.currentView]._render()\n        },\n\n        removeDate: function (date) {\n            var selected = this.selectedDates,\n                _this = this;\n\n            if (!(date instanceof Date)) return;\n\n            return selected.some(function (curDate, i) {\n                if (datepicker.isSame(curDate, date)) {\n                    selected.splice(i, 1);\n\n                    if (!_this.selectedDates.length) {\n                        _this.minRange = '';\n                        _this.maxRange = '';\n                        _this.lastSelectedDate = '';\n                    } else {\n                        _this.lastSelectedDate = _this.selectedDates[_this.selectedDates.length - 1];\n                    }\n\n                    _this.views[_this.currentView]._render();\n                    _this._setInputValue();\n\n                    if (_this.opts.onSelect) {\n                        _this._triggerOnChange();\n                    }\n\n                    return true\n                }\n            })\n        },\n\n        today: function () {\n            this.silent = true;\n            this.view = this.opts.minView;\n            this.silent = false;\n            this.date = new Date();\n\n            if (this.opts.todayButton instanceof Date) {\n                this.selectDate(this.opts.todayButton)\n            }\n        },\n\n        clear: function () {\n            this.selectedDates = [];\n            this.minRange = '';\n            this.maxRange = '';\n            this.views[this.currentView]._render();\n            this._setInputValue();\n            if (this.opts.onSelect) {\n                this._triggerOnChange()\n            }\n        },\n\n        /**\n         * Updates datepicker options\n         * @param {String|Object} param - parameter's name to update. If object then it will extend current options\n         * @param {String|Number|Object} [value] - new param value\n         */\n        update: function (param, value) {\n            var len = arguments.length,\n                lastSelectedDate = this.lastSelectedDate;\n\n            if (len == 2) {\n                this.opts[param] = value;\n            } else if (len == 1 && typeof param == 'object') {\n                this.opts = $.extend(true, this.opts, param)\n            }\n\n            this._createShortCuts();\n            this._syncWithMinMaxDates();\n            this._defineLocale(this.opts.language);\n            this.nav._addButtonsIfNeed();\n            if (!this.opts.onlyTimepicker) this.nav._render();\n            this.views[this.currentView]._render();\n\n            if (this.elIsInput && !this.opts.inline) {\n                this._setPositionClasses(this.opts.position);\n                if (this.visible) {\n                    this.setPosition(this.opts.position)\n                }\n            }\n\n            if (this.opts.classes) {\n                this.$datepicker.addClass(this.opts.classes)\n            }\n\n            if (this.opts.onlyTimepicker) {\n                this.$datepicker.addClass('-only-timepicker-');\n            }\n\n            if (this.opts.timepicker) {\n                if (lastSelectedDate) this.timepicker._handleDate(lastSelectedDate);\n                this.timepicker._updateRanges();\n                this.timepicker._updateCurrentTime();\n                // Change hours and minutes if it's values have been changed through min/max hours/minutes\n                if (lastSelectedDate) {\n                    lastSelectedDate.setHours(this.timepicker.hours);\n                    lastSelectedDate.setMinutes(this.timepicker.minutes);\n                }\n            }\n\n            this._setInputValue();\n\n            return this;\n        },\n\n        _syncWithMinMaxDates: function () {\n            var curTime = this.date.getTime();\n            this.silent = true;\n            if (this.minTime > curTime) {\n                this.date = this.minDate;\n            }\n\n            if (this.maxTime < curTime) {\n                this.date = this.maxDate;\n            }\n            this.silent = false;\n        },\n\n        _isSelected: function (checkDate, cellType) {\n            var res = false;\n            this.selectedDates.some(function (date) {\n                if (datepicker.isSame(date, checkDate, cellType)) {\n                    res = date;\n                    return true;\n                }\n            });\n            return res;\n        },\n\n        _setInputValue: function () {\n            var _this = this,\n                opts = _this.opts,\n                format = _this.loc.dateFormat,\n                altFormat = opts.altFieldDateFormat,\n                value = _this.selectedDates.map(function (date) {\n                    return _this.formatDate(format, date)\n                }),\n                altValues;\n\n            if (opts.altField && _this.$altField.length) {\n                altValues = this.selectedDates.map(function (date) {\n                    return _this.formatDate(altFormat, date)\n                });\n                altValues = altValues.join(this.opts.multipleDatesSeparator);\n                this.$altField.val(altValues);\n            }\n\n            value = value.join(this.opts.multipleDatesSeparator);\n\n            this.$el.val(value)\n        },\n\n        /**\n         * Check if date is between minDate and maxDate\n         * @param date {object} - date object\n         * @param type {string} - cell type\n         * @returns {boolean}\n         * @private\n         */\n        _isInRange: function (date, type) {\n            var time = date.getTime(),\n                d = datepicker.getParsedDate(date),\n                min = datepicker.getParsedDate(this.minDate),\n                max = datepicker.getParsedDate(this.maxDate),\n                dMinTime = new Date(d.year, d.month, min.date).getTime(),\n                dMaxTime = new Date(d.year, d.month, max.date).getTime(),\n                types = {\n                    day: time >= this.minTime && time <= this.maxTime,\n                    month: dMinTime >= this.minTime && dMaxTime <= this.maxTime,\n                    year: d.year >= min.year && d.year <= max.year\n                };\n            return type ? types[type] : types.day\n        },\n\n        _getDimensions: function ($el) {\n            var offset = $el.offset();\n\n            return {\n                width: $el.outerWidth(),\n                height: $el.outerHeight(),\n                left: offset.left,\n                top: offset.top\n            }\n        },\n\n        _getDateFromCell: function (cell) {\n            var curDate = this.parsedDate,\n                year = cell.data('year') || curDate.year,\n                month = cell.data('month') == undefined ? curDate.month : cell.data('month'),\n                date = cell.data('date') || 1;\n\n            return new Date(year, month, date);\n        },\n\n        _setPositionClasses: function (pos) {\n            pos = pos.split(' ');\n            var main = pos[0],\n                sec = pos[1],\n                classes = 'datepicker -' + main + '-' + sec + '- -from-' + main + '-';\n\n            if (this.visible) classes += ' active';\n\n            this.$datepicker\n                .removeAttr('class')\n                .addClass(classes);\n        },\n\n        setPosition: function (position) {\n            position = position || this.opts.position;\n\n            var dims = this._getDimensions(this.$el),\n                selfDims = this._getDimensions(this.$datepicker),\n                pos = position.split(' '),\n                top, left,\n                offset = this.opts.offset,\n                main = pos[0],\n                secondary = pos[1];\n\n            switch (main) {\n                case 'top':\n                    top = dims.top - selfDims.height - offset;\n                    break;\n                case 'right':\n                    left = dims.left + dims.width + offset;\n                    break;\n                case 'bottom':\n                    top = dims.top + dims.height + offset;\n                    break;\n                case 'left':\n                    left = dims.left - selfDims.width - offset;\n                    break;\n            }\n\n            switch(secondary) {\n                case 'top':\n                    top = dims.top;\n                    break;\n                case 'right':\n                    left = dims.left + dims.width - selfDims.width;\n                    break;\n                case 'bottom':\n                    top = dims.top + dims.height - selfDims.height;\n                    break;\n                case 'left':\n                    left = dims.left;\n                    break;\n                case 'center':\n                    if (/left|right/.test(main)) {\n                        top = dims.top + dims.height/2 - selfDims.height/2;\n                    } else {\n                        left = dims.left + dims.width/2 - selfDims.width/2;\n                    }\n            }\n\n            this.$datepicker\n                .css({\n                    left: left,\n                    top: top\n                })\n        },\n\n        show: function () {\n            var onShow = this.opts.onShow;\n\n            this.setPosition(this.opts.position);\n            this.$datepicker.addClass('active');\n            this.visible = true;\n\n            if (onShow) {\n                this._bindVisionEvents(onShow)\n            }\n        },\n\n        hide: function () {\n            var onHide = this.opts.onHide;\n\n            this.$datepicker\n                .removeClass('active')\n                .css({\n                    left: '-100000px'\n                });\n\n            this.focused = '';\n            this.keys = [];\n\n            this.inFocus = false;\n            this.visible = false;\n            this.$el.blur();\n\n            if (onHide) {\n                this._bindVisionEvents(onHide)\n            }\n        },\n\n        down: function (date) {\n            this._changeView(date, 'down');\n        },\n\n        up: function (date) {\n            this._changeView(date, 'up');\n        },\n\n        _bindVisionEvents: function (event) {\n            this.$datepicker.off('transitionend.dp');\n            event(this, false);\n            this.$datepicker.one('transitionend.dp', event.bind(this, this, true))\n        },\n\n        _changeView: function (date, dir) {\n            date = date || this.focused || this.date;\n\n            var nextView = dir == 'up' ? this.viewIndex + 1 : this.viewIndex - 1;\n            if (nextView > 2) nextView = 2;\n            if (nextView < 0) nextView = 0;\n\n            this.silent = true;\n            this.date = new Date(date.getFullYear(), date.getMonth(), 1);\n            this.silent = false;\n            this.view = this.viewIndexes[nextView];\n\n        },\n\n        _handleHotKey: function (key) {\n            var date = datepicker.getParsedDate(this._getFocusedDate()),\n                focusedParsed,\n                o = this.opts,\n                newDate,\n                totalDaysInNextMonth,\n                monthChanged = false,\n                yearChanged = false,\n                decadeChanged = false,\n                y = date.year,\n                m = date.month,\n                d = date.date;\n\n            switch (key) {\n                case 'ctrlRight':\n                case 'ctrlUp':\n                    m += 1;\n                    monthChanged = true;\n                    break;\n                case 'ctrlLeft':\n                case 'ctrlDown':\n                    m -= 1;\n                    monthChanged = true;\n                    break;\n                case 'shiftRight':\n                case 'shiftUp':\n                    yearChanged = true;\n                    y += 1;\n                    break;\n                case 'shiftLeft':\n                case 'shiftDown':\n                    yearChanged = true;\n                    y -= 1;\n                    break;\n                case 'altRight':\n                case 'altUp':\n                    decadeChanged = true;\n                    y += 10;\n                    break;\n                case 'altLeft':\n                case 'altDown':\n                    decadeChanged = true;\n                    y -= 10;\n                    break;\n                case 'ctrlShiftUp':\n                    this.up();\n                    break;\n            }\n\n            totalDaysInNextMonth = datepicker.getDaysCount(new Date(y,m));\n            newDate = new Date(y,m,d);\n\n            // If next month has less days than current, set date to total days in that month\n            if (totalDaysInNextMonth < d) d = totalDaysInNextMonth;\n\n            // Check if newDate is in valid range\n            if (newDate.getTime() < this.minTime) {\n                newDate = this.minDate;\n            } else if (newDate.getTime() > this.maxTime) {\n                newDate = this.maxDate;\n            }\n\n            this.focused = newDate;\n\n            focusedParsed = datepicker.getParsedDate(newDate);\n            if (monthChanged && o.onChangeMonth) {\n                o.onChangeMonth(focusedParsed.month, focusedParsed.year)\n            }\n            if (yearChanged && o.onChangeYear) {\n                o.onChangeYear(focusedParsed.year)\n            }\n            if (decadeChanged && o.onChangeDecade) {\n                o.onChangeDecade(this.curDecade)\n            }\n        },\n\n        _registerKey: function (key) {\n            var exists = this.keys.some(function (curKey) {\n                return curKey == key;\n            });\n\n            if (!exists) {\n                this.keys.push(key)\n            }\n        },\n\n        _unRegisterKey: function (key) {\n            var index = this.keys.indexOf(key);\n\n            this.keys.splice(index, 1);\n        },\n\n        _isHotKeyPressed: function () {\n            var currentHotKey,\n                found = false,\n                _this = this,\n                pressedKeys = this.keys.sort();\n\n            for (var hotKey in hotKeys) {\n                currentHotKey = hotKeys[hotKey];\n                if (pressedKeys.length != currentHotKey.length) continue;\n\n                if (currentHotKey.every(function (key, i) { return key == pressedKeys[i]})) {\n                    _this._trigger('hotKey', hotKey);\n                    found = true;\n                }\n            }\n\n            return found;\n        },\n\n        _trigger: function (event, args) {\n            this.$el.trigger(event, args)\n        },\n\n        _focusNextCell: function (keyCode, type) {\n            type = type || this.cellType;\n\n            var date = datepicker.getParsedDate(this._getFocusedDate()),\n                y = date.year,\n                m = date.month,\n                d = date.date;\n\n            if (this._isHotKeyPressed()){\n                return;\n            }\n\n            switch(keyCode) {\n                case 37: // left\n                    type == 'day' ? (d -= 1) : '';\n                    type == 'month' ? (m -= 1) : '';\n                    type == 'year' ? (y -= 1) : '';\n                    break;\n                case 38: // up\n                    type == 'day' ? (d -= 7) : '';\n                    type == 'month' ? (m -= 3) : '';\n                    type == 'year' ? (y -= 4) : '';\n                    break;\n                case 39: // right\n                    type == 'day' ? (d += 1) : '';\n                    type == 'month' ? (m += 1) : '';\n                    type == 'year' ? (y += 1) : '';\n                    break;\n                case 40: // down\n                    type == 'day' ? (d += 7) : '';\n                    type == 'month' ? (m += 3) : '';\n                    type == 'year' ? (y += 4) : '';\n                    break;\n            }\n\n            var nd = new Date(y,m,d);\n            if (nd.getTime() < this.minTime) {\n                nd = this.minDate;\n            } else if (nd.getTime() > this.maxTime) {\n                nd = this.maxDate;\n            }\n\n            this.focused = nd;\n\n        },\n\n        _getFocusedDate: function () {\n            var focused  = this.focused || this.selectedDates[this.selectedDates.length - 1],\n                d = this.parsedDate;\n\n            if (!focused) {\n                switch (this.view) {\n                    case 'days':\n                        focused = new Date(d.year, d.month, new Date().getDate());\n                        break;\n                    case 'months':\n                        focused = new Date(d.year, d.month, 1);\n                        break;\n                    case 'years':\n                        focused = new Date(d.year, 0, 1);\n                        break;\n                }\n            }\n\n            return focused;\n        },\n\n        _getCell: function (date, type) {\n            type = type || this.cellType;\n\n            var d = datepicker.getParsedDate(date),\n                selector = '.datepicker--cell[data-year=\"' + d.year + '\"]',\n                $cell;\n\n            switch (type) {\n                case 'month':\n                    selector = '[data-month=\"' + d.month + '\"]';\n                    break;\n                case 'day':\n                    selector += '[data-month=\"' + d.month + '\"][data-date=\"' + d.date + '\"]';\n                    break;\n            }\n            $cell = this.views[this.currentView].$el.find(selector);\n\n            return $cell.length ? $cell : $('');\n        },\n\n        destroy: function () {\n            var _this = this;\n            _this.$el\n                .off('.adp')\n                .data('datepicker', '');\n\n            _this.selectedDates = [];\n            _this.focused = '';\n            _this.views = {};\n            _this.keys = [];\n            _this.minRange = '';\n            _this.maxRange = '';\n\n            if (_this.opts.inline || !_this.elIsInput) {\n                _this.$datepicker.closest('.datepicker-inline').remove();\n            } else {\n                _this.$datepicker.remove();\n            }\n        },\n\n        _handleAlreadySelectedDates: function (alreadySelected, selectedDate) {\n            if (this.opts.range) {\n                if (!this.opts.toggleSelected) {\n                    // Add possibility to select same date when range is true\n                    if (this.selectedDates.length != 2) {\n                        this._trigger('clickCell', selectedDate);\n                    }\n                } else {\n                    this.removeDate(selectedDate);\n                }\n            } else if (this.opts.toggleSelected){\n                this.removeDate(selectedDate);\n            }\n\n            // Change last selected date to be able to change time when clicking on this cell\n            if (!this.opts.toggleSelected) {\n                this.lastSelectedDate = alreadySelected;\n                if (this.opts.timepicker) {\n                    this.timepicker._setTime(alreadySelected);\n                    this.timepicker.update();\n                }\n            }\n        },\n\n        _onShowEvent: function (e) {\n            if (!this.visible) {\n                this.show();\n            }\n        },\n\n        _onBlur: function () {\n            if (!this.inFocus && this.visible) {\n                this.hide();\n            }\n        },\n\n        _onMouseDownDatepicker: function (e) {\n            this.inFocus = true;\n        },\n\n        _onMouseUpDatepicker: function (e) {\n            this.inFocus = false;\n            e.originalEvent.inFocus = true;\n            if (!e.originalEvent.timepickerFocus) this.$el.focus();\n        },\n\n        _onKeyUpGeneral: function (e) {\n            var val = this.$el.val();\n\n            if (!val) {\n                this.clear();\n            }\n        },\n\n        _onResize: function () {\n            if (this.visible) {\n                this.setPosition();\n            }\n        },\n\n        _onMouseUpBody: function (e) {\n            if (e.originalEvent.inFocus) return;\n\n            if (this.visible && !this.inFocus) {\n                this.hide();\n            }\n        },\n\n        _onMouseUpEl: function (e) {\n            e.originalEvent.inFocus = true;\n            setTimeout(this._onKeyUpGeneral.bind(this),4);\n        },\n\n        _onKeyDown: function (e) {\n            var code = e.which;\n            this._registerKey(code);\n\n            // Arrows\n            if (code >= 37 && code <= 40) {\n                e.preventDefault();\n                this._focusNextCell(code);\n            }\n\n            // Enter\n            if (code == 13) {\n                if (this.focused) {\n                    if (this._getCell(this.focused).hasClass('-disabled-')) return;\n                    if (this.view != this.opts.minView) {\n                        this.down()\n                    } else {\n                        var alreadySelected = this._isSelected(this.focused, this.cellType);\n\n                        if (!alreadySelected) {\n                            if (this.timepicker) {\n                                this.focused.setHours(this.timepicker.hours);\n                                this.focused.setMinutes(this.timepicker.minutes);\n                            }\n                            this.selectDate(this.focused);\n                            return;\n                        }\n                        this._handleAlreadySelectedDates(alreadySelected, this.focused)\n                    }\n                }\n            }\n\n            // Esc\n            if (code == 27) {\n                this.hide();\n            }\n        },\n\n        _onKeyUp: function (e) {\n            var code = e.which;\n            this._unRegisterKey(code);\n        },\n\n        _onHotKey: function (e, hotKey) {\n            this._handleHotKey(hotKey);\n        },\n\n        _onMouseEnterCell: function (e) {\n            var $cell = $(e.target).closest('.datepicker--cell'),\n                date = this._getDateFromCell($cell);\n\n            // Prevent from unnecessary rendering and setting new currentDate\n            this.silent = true;\n\n            if (this.focused) {\n                this.focused = ''\n            }\n\n            $cell.addClass('-focus-');\n\n            this.focused = date;\n            this.silent = false;\n\n            if (this.opts.range && this.selectedDates.length == 1) {\n                this.minRange = this.selectedDates[0];\n                this.maxRange = '';\n                if (datepicker.less(this.minRange, this.focused)) {\n                    this.maxRange = this.minRange;\n                    this.minRange = '';\n                }\n                this.views[this.currentView]._update();\n            }\n        },\n\n        _onMouseLeaveCell: function (e) {\n            var $cell = $(e.target).closest('.datepicker--cell');\n\n            $cell.removeClass('-focus-');\n\n            this.silent = true;\n            this.focused = '';\n            this.silent = false;\n        },\n\n        _onTimeChange: function (e, h, m) {\n            var date = new Date(),\n                selectedDates = this.selectedDates,\n                selected = false;\n\n            if (selectedDates.length) {\n                selected = true;\n                date = this.lastSelectedDate;\n            }\n\n            date.setHours(h);\n            date.setMinutes(m);\n\n            if (!selected && !this._getCell(date).hasClass('-disabled-')) {\n                this.selectDate(date);\n            } else {\n                this._setInputValue();\n                if (this.opts.onSelect) {\n                    this._triggerOnChange();\n                }\n            }\n        },\n\n        _onClickCell: function (e, date) {\n            if (this.timepicker) {\n                date.setHours(this.timepicker.hours);\n                date.setMinutes(this.timepicker.minutes);\n            }\n            this.selectDate(date);\n        },\n\n        set focused(val) {\n            if (!val && this.focused) {\n                var $cell = this._getCell(this.focused);\n\n                if ($cell.length) {\n                    $cell.removeClass('-focus-')\n                }\n            }\n            this._focused = val;\n            if (this.opts.range && this.selectedDates.length == 1) {\n                this.minRange = this.selectedDates[0];\n                this.maxRange = '';\n                if (datepicker.less(this.minRange, this._focused)) {\n                    this.maxRange = this.minRange;\n                    this.minRange = '';\n                }\n            }\n            if (this.silent) return;\n            this.date = val;\n        },\n\n        get focused() {\n            return this._focused;\n        },\n\n        get parsedDate() {\n            return datepicker.getParsedDate(this.date);\n        },\n\n        set date (val) {\n            if (!(val instanceof Date)) return;\n\n            this.currentDate = val;\n\n            if (this.inited && !this.silent) {\n                this.views[this.view]._render();\n                this.nav._render();\n                if (this.visible && this.elIsInput) {\n                    this.setPosition();\n                }\n            }\n            return val;\n        },\n\n        get date () {\n            return this.currentDate\n        },\n\n        set view (val) {\n            this.viewIndex = this.viewIndexes.indexOf(val);\n\n            if (this.viewIndex < 0) {\n                return;\n            }\n\n            this.prevView = this.currentView;\n            this.currentView = val;\n\n            if (this.inited) {\n                if (!this.views[val]) {\n                    this.views[val] = new  $.fn.datepicker.Body(this, val, this.opts)\n                } else {\n                    this.views[val]._render();\n                }\n\n                this.views[this.prevView].hide();\n                this.views[val].show();\n                this.nav._render();\n\n                if (this.opts.onChangeView) {\n                    this.opts.onChangeView(val)\n                }\n                if (this.elIsInput && this.visible) this.setPosition();\n            }\n\n            return val\n        },\n\n        get view() {\n            return this.currentView;\n        },\n\n        get cellType() {\n            return this.view.substring(0, this.view.length - 1)\n        },\n\n        get minTime() {\n            var min = datepicker.getParsedDate(this.minDate);\n            return new Date(min.year, min.month, min.date).getTime()\n        },\n\n        get maxTime() {\n            var max = datepicker.getParsedDate(this.maxDate);\n            return new Date(max.year, max.month, max.date).getTime()\n        },\n\n        get curDecade() {\n            return datepicker.getDecade(this.date)\n        }\n    };\n\n    //  Utils\n    // -------------------------------------------------\n\n    datepicker.getDaysCount = function (date) {\n        return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n    };\n\n    datepicker.getParsedDate = function (date) {\n        return {\n            year: date.getFullYear(),\n            month: date.getMonth(),\n            fullMonth: (date.getMonth() + 1) < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1, // One based\n            date: date.getDate(),\n            fullDate: date.getDate() < 10 ? '0' + date.getDate() : date.getDate(),\n            day: date.getDay(),\n            hours: date.getHours(),\n            fullHours:  date.getHours() < 10 ? '0' + date.getHours() :  date.getHours() ,\n            minutes: date.getMinutes(),\n            fullMinutes:  date.getMinutes() < 10 ? '0' + date.getMinutes() :  date.getMinutes()\n        }\n    };\n\n    datepicker.getDecade = function (date) {\n        var firstYear = Math.floor(date.getFullYear() / 10) * 10;\n\n        return [firstYear, firstYear + 9];\n    };\n\n    datepicker.template = function (str, data) {\n        return str.replace(/#\\{([\\w]+)\\}/g, function (source, match) {\n            if (data[match] || data[match] === 0) {\n                return data[match]\n            }\n        });\n    };\n\n    datepicker.isSame = function (date1, date2, type) {\n        if (!date1 || !date2) return false;\n        var d1 = datepicker.getParsedDate(date1),\n            d2 = datepicker.getParsedDate(date2),\n            _type = type ? type : 'day',\n\n            conditions = {\n                day: d1.date == d2.date && d1.month == d2.month && d1.year == d2.year,\n                month: d1.month == d2.month && d1.year == d2.year,\n                year: d1.year == d2.year\n            };\n\n        return conditions[_type];\n    };\n\n    datepicker.less = function (dateCompareTo, date, type) {\n        if (!dateCompareTo || !date) return false;\n        return date.getTime() < dateCompareTo.getTime();\n    };\n\n    datepicker.bigger = function (dateCompareTo, date, type) {\n        if (!dateCompareTo || !date) return false;\n        return date.getTime() > dateCompareTo.getTime();\n    };\n\n    datepicker.getLeadingZeroNum = function (num) {\n        return parseInt(num) < 10 ? '0' + num : num;\n    };\n\n    /**\n     * Returns copy of date with hours and minutes equals to 0\n     * @param date {Date}\n     */\n    datepicker.resetTime = function (date) {\n        if (typeof date != 'object') return;\n        date = datepicker.getParsedDate(date);\n        return new Date(date.year, date.month, date.date)\n    };\n\n    $.fn.datepicker = function ( options ) {\n        return this.each(function () {\n            if (!$.data(this, pluginName)) {\n                $.data(this,  pluginName,\n                    new Datepicker( this, options ));\n            } else {\n                var _this = $.data(this, pluginName);\n\n                _this.opts = $.extend(true, _this.opts, options);\n                _this.update();\n            }\n        });\n    };\n\n    $.fn.datepicker.Constructor = Datepicker;\n\n    $.fn.datepicker.language = {\n        ru: {\n            days: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\n            daysShort: ['Вос','Пон','Вто','Сре','Чет','Пят','Суб'],\n            daysMin: ['Вс','Пн','Вт','Ср','Чт','Пт','Сб'],\n            months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n            monthsShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\n            today: 'Применить',\n            clear: 'Очистить',\n            dateFormat: 'dd.mm.yyyy',\n            timeFormat: 'hh:ii',\n            firstDay: 1\n        }\n    };\n\n    $(function () {\n        $(autoInitSelector).datepicker();\n    })\n\n})();\n\n;(function () {\n    var templates = {\n        days:'' +\n        '<div class=\"datepicker--days datepicker--body\">' +\n        '<div class=\"datepicker--days-names\"></div>' +\n        '<div class=\"datepicker--cells datepicker--cells-days\"></div>' +\n        '</div>',\n        months: '' +\n        '<div class=\"datepicker--months datepicker--body\">' +\n        '<div class=\"datepicker--cells datepicker--cells-months\"></div>' +\n        '</div>',\n        years: '' +\n        '<div class=\"datepicker--years datepicker--body\">' +\n        '<div class=\"datepicker--cells datepicker--cells-years\"></div>' +\n        '</div>'\n        },\n        datepicker = $.fn.datepicker,\n        dp = datepicker.Constructor;\n\n    datepicker.Body = function (d, type, opts) {\n        this.d = d;\n        this.type = type;\n        this.opts = opts;\n        this.$el = $('');\n\n        if (this.opts.onlyTimepicker) return;\n        this.init();\n    };\n\n    datepicker.Body.prototype = {\n        init: function () {\n            this._buildBaseHtml();\n            this._render();\n\n            this._bindEvents();\n        },\n\n        _bindEvents: function () {\n            this.$el.on('click', '.datepicker--cell', $.proxy(this._onClickCell, this));\n        },\n\n        _buildBaseHtml: function () {\n            this.$el = $(templates[this.type]).appendTo(this.d.$content);\n            this.$names = $('.datepicker--days-names', this.$el);\n            this.$cells = $('.datepicker--cells', this.$el);\n        },\n\n        _getDayNamesHtml: function (firstDay, curDay, html, i) {\n            curDay = curDay != undefined ? curDay : firstDay;\n            html = html ? html : '';\n            i = i != undefined ? i : 0;\n\n            if (i > 7) return html;\n            if (curDay == 7) return this._getDayNamesHtml(firstDay, 0, html, ++i);\n\n            html += '<div class=\"datepicker--day-name' + (this.d.isWeekend(curDay) ? \" -weekend-\" : \"\") + '\">' + this.d.loc.daysMin[curDay] + '</div>';\n\n            return this._getDayNamesHtml(firstDay, ++curDay, html, ++i);\n        },\n\n        _getCellContents: function (date, type) {\n            var classes = \"datepicker--cell datepicker--cell-\" + type,\n                currentDate = new Date(),\n                parent = this.d,\n                minRange = dp.resetTime(parent.minRange),\n                maxRange = dp.resetTime(parent.maxRange),\n                opts = parent.opts,\n                d = dp.getParsedDate(date),\n                render = {},\n                html = d.date;\n\n            switch (type) {\n                case 'day':\n                    if (parent.isWeekend(d.day)) classes += \" -weekend-\";\n                    if (d.month != this.d.parsedDate.month) {\n                        classes += \" -other-month-\";\n                        if (!opts.selectOtherMonths) {\n                            classes += \" -disabled-\";\n                        }\n                        if (!opts.showOtherMonths) html = '';\n                    }\n                    break;\n                case 'month':\n                    html = parent.loc[parent.opts.monthsField][d.month];\n                    break;\n                case 'year':\n                    var decade = parent.curDecade;\n                    html = d.year;\n                    if (d.year < decade[0] || d.year > decade[1]) {\n                        classes += ' -other-decade-';\n                        if (!opts.selectOtherYears) {\n                            classes += \" -disabled-\";\n                        }\n                        if (!opts.showOtherYears) html = '';\n                    }\n                    break;\n            }\n\n            if (opts.onRenderCell) {\n                render = opts.onRenderCell(date, type) || {};\n                html = render.html ? render.html : html;\n                classes += render.classes ? ' ' + render.classes : '';\n            }\n\n            if (opts.range) {\n                if (dp.isSame(minRange, date, type)) classes += ' -range-from-';\n                if (dp.isSame(maxRange, date, type)) classes += ' -range-to-';\n\n                if (parent.selectedDates.length == 1 && parent.focused) {\n                    if (\n                        (dp.bigger(minRange, date) && dp.less(parent.focused, date)) ||\n                        (dp.less(maxRange, date) && dp.bigger(parent.focused, date)))\n                    {\n                        classes += ' -in-range-'\n                    }\n\n                    if (dp.less(maxRange, date) && dp.isSame(parent.focused, date)) {\n                        classes += ' -range-from-'\n                    }\n                    if (dp.bigger(minRange, date) && dp.isSame(parent.focused, date)) {\n                        classes += ' -range-to-'\n                    }\n\n                } else if (parent.selectedDates.length == 2) {\n                    if (dp.bigger(minRange, date) && dp.less(maxRange, date)) {\n                        classes += ' -in-range-'\n                    }\n                }\n            }\n\n\n            if (dp.isSame(currentDate, date, type)) classes += ' -current-';\n            if (parent.focused && dp.isSame(date, parent.focused, type)) classes += ' -focus-';\n            if (parent._isSelected(date, type)) classes += ' -selected-';\n            if (!parent._isInRange(date, type) || render.disabled) classes += ' -disabled-';\n\n            return {\n                html: html,\n                classes: classes\n            }\n        },\n\n        /**\n         * Calculates days number to render. Generates days html and returns it.\n         * @param {object} date - Date object\n         * @returns {string}\n         * @private\n         */\n        _getDaysHtml: function (date) {\n            var totalMonthDays = dp.getDaysCount(date),\n                firstMonthDay = new Date(date.getFullYear(), date.getMonth(), 1).getDay(),\n                lastMonthDay = new Date(date.getFullYear(), date.getMonth(), totalMonthDays).getDay(),\n                daysFromPevMonth = firstMonthDay - this.d.loc.firstDay,\n                daysFromNextMonth = 6 - lastMonthDay + this.d.loc.firstDay;\n\n            daysFromPevMonth = daysFromPevMonth < 0 ? daysFromPevMonth + 7 : daysFromPevMonth;\n            daysFromNextMonth = daysFromNextMonth > 6 ? daysFromNextMonth - 7 : daysFromNextMonth;\n\n            var startDayIndex = -daysFromPevMonth + 1,\n                m, y,\n                html = '';\n\n            for (var i = startDayIndex, max = totalMonthDays + daysFromNextMonth; i <= max; i++) {\n                y = date.getFullYear();\n                m = date.getMonth();\n\n                html += this._getDayHtml(new Date(y, m, i))\n            }\n\n            return html;\n        },\n\n        _getDayHtml: function (date) {\n           var content = this._getCellContents(date, 'day');\n\n            return '<div class=\"' + content.classes + '\" ' +\n                'data-date=\"' + date.getDate() + '\" ' +\n                'data-month=\"' + date.getMonth() + '\" ' +\n                'data-year=\"' + date.getFullYear() + '\">' + content.html + '</div>';\n        },\n\n        /**\n         * Generates months html\n         * @param {object} date - date instance\n         * @returns {string}\n         * @private\n         */\n        _getMonthsHtml: function (date) {\n            var html = '',\n                d = dp.getParsedDate(date),\n                i = 0;\n\n            while(i < 12) {\n                html += this._getMonthHtml(new Date(d.year, i));\n                i++\n            }\n\n            return html;\n        },\n\n        _getMonthHtml: function (date) {\n            var content = this._getCellContents(date, 'month');\n\n            return '<div class=\"' + content.classes + '\" data-month=\"' + date.getMonth() + '\">' + content.html + '</div>'\n        },\n\n        _getYearsHtml: function (date) {\n            var d = dp.getParsedDate(date),\n                decade = dp.getDecade(date),\n                firstYear = decade[0] - 1,\n                html = '',\n                i = firstYear;\n\n            for (i; i <= decade[1] + 1; i++) {\n                html += this._getYearHtml(new Date(i , 0));\n            }\n\n            return html;\n        },\n\n        _getYearHtml: function (date) {\n            var content = this._getCellContents(date, 'year');\n\n            return '<div class=\"' + content.classes + '\" data-year=\"' + date.getFullYear() + '\">' + content.html + '</div>'\n        },\n\n        _renderTypes: {\n            days: function () {\n                var dayNames = this._getDayNamesHtml(this.d.loc.firstDay),\n                    days = this._getDaysHtml(this.d.currentDate);\n\n                this.$cells.html(days);\n                this.$names.html(dayNames)\n            },\n            months: function () {\n                var html = this._getMonthsHtml(this.d.currentDate);\n\n                this.$cells.html(html)\n            },\n            years: function () {\n                var html = this._getYearsHtml(this.d.currentDate);\n\n                this.$cells.html(html)\n            }\n        },\n\n        _render: function () {\n            if (this.opts.onlyTimepicker) return;\n            this._renderTypes[this.type].bind(this)();\n        },\n\n        _update: function () {\n            var $cells = $('.datepicker--cell', this.$cells),\n                _this = this,\n                classes,\n                $cell,\n                date;\n            $cells.each(function (cell, i) {\n                $cell = $(this);\n                date = _this.d._getDateFromCell($(this));\n                classes = _this._getCellContents(date, _this.d.cellType);\n                $cell.attr('class',classes.classes)\n            });\n        },\n\n        show: function () {\n            if (this.opts.onlyTimepicker) return;\n            this.$el.addClass('active');\n            this.acitve = true;\n        },\n\n        hide: function () {\n            this.$el.removeClass('active');\n            this.active = false;\n        },\n\n        //  Events\n        // -------------------------------------------------\n\n        _handleClick: function (el) {\n            var date = el.data('date') || 1,\n                month = el.data('month') || 0,\n                year = el.data('year') || this.d.parsedDate.year,\n                dp = this.d;\n            // Change view if min view does not reach yet\n            if (dp.view != this.opts.minView) {\n                dp.down(new Date(year, month, date));\n                return;\n            }\n            // Select date if min view is reached\n            var selectedDate = new Date(year, month, date),\n                alreadySelected = this.d._isSelected(selectedDate, this.d.cellType);\n\n            if (!alreadySelected) {\n                dp._trigger('clickCell', selectedDate);\n                return;\n            }\n\n            dp._handleAlreadySelectedDates.bind(dp, alreadySelected, selectedDate)();\n\n        },\n\n        _onClickCell: function (e) {\n            var $el = $(e.target).closest('.datepicker--cell');\n\n            if ($el.hasClass('-disabled-')) return;\n\n            this._handleClick.bind(this)($el);\n        }\n    };\n})();\n\n;(function () {\n    var template = '' +\n        '<div class=\"datepicker--nav-action\" data-action=\"prev\">#{prevHtml}</div>' +\n        '<div class=\"datepicker--nav-title\">#{title}</div>' +\n        '<div class=\"datepicker--nav-action\" data-action=\"next\">#{nextHtml}</div>',\n        buttonsContainerTemplate = '<div class=\"datepicker--buttons\"></div>',\n        button = '<span class=\"datepicker--button\" data-action=\"#{action}\">#{label}</span>',\n        datepicker = $.fn.datepicker,\n        dp = datepicker.Constructor;\n\n    datepicker.Navigation = function (d, opts) {\n        this.d = d;\n        this.opts = opts;\n\n        this.$buttonsContainer = '';\n\n        this.init();\n    };\n\n    datepicker.Navigation.prototype = {\n        init: function () {\n            this._buildBaseHtml();\n            this._bindEvents();\n        },\n\n        _bindEvents: function () {\n            this.d.$nav.on('click', '.datepicker--nav-action', $.proxy(this._onClickNavButton, this));\n            // this.d.$nav.on('click', '.datepicker--nav-title', $.proxy(this._onClickNavTitle, this));\n            this.d.$datepicker.on('click', '.datepicker--button', $.proxy(this._onClickNavButton, this));\n        },\n\n        _buildBaseHtml: function () {\n            if (!this.opts.onlyTimepicker) {\n                this._render();\n            }\n            this._addButtonsIfNeed();\n        },\n\n        _addButtonsIfNeed: function () {\n            if (this.opts.todayButton) {\n                this._addButton('today')\n            }\n            if (this.opts.clearButton) {\n                this._addButton('clear')\n            }\n        },\n\n        _render: function () {\n            var title = this._getTitle(this.d.currentDate),\n                html = dp.template(template, $.extend({title: title}, this.opts));\n            this.d.$nav.html(html);\n            if (this.d.view == 'years') {\n                $('.datepicker--nav-title', this.d.$nav).addClass('-disabled-');\n            }\n            this.setNavStatus();\n        },\n\n        _getTitle: function (date) {\n            return this.d.formatDate(this.opts.navTitles[this.d.view], date)\n        },\n\n        _addButton: function (type) {\n            if (!this.$buttonsContainer.length) {\n                this._addButtonsContainer();\n            }\n\n            var data = {\n                    action: type,\n                    label: this.d.loc[type]\n                },\n                html = dp.template(button, data);\n\n            if ($('[data-action=' + type + ']', this.$buttonsContainer).length) return;\n            this.$buttonsContainer.append(html);\n        },\n\n        _addButtonsContainer: function () {\n            this.d.$datepicker.append(buttonsContainerTemplate);\n            this.$buttonsContainer = $('.datepicker--buttons', this.d.$datepicker);\n        },\n\n        setNavStatus: function () {\n            if (!(this.opts.minDate || this.opts.maxDate) || !this.opts.disableNavWhenOutOfRange) return;\n\n            var date = this.d.parsedDate,\n                m = date.month,\n                y = date.year,\n                d = date.date;\n\n            switch (this.d.view) {\n                case 'days':\n                    if (!this.d._isInRange(new Date(y, m-1, 1), 'month')) {\n                        this._disableNav('prev')\n                    }\n                    if (!this.d._isInRange(new Date(y, m+1, 1), 'month')) {\n                        this._disableNav('next')\n                    }\n                    break;\n                case 'months':\n                    if (!this.d._isInRange(new Date(y-1, m, d), 'year')) {\n                        this._disableNav('prev')\n                    }\n                    if (!this.d._isInRange(new Date(y+1, m, d), 'year')) {\n                        this._disableNav('next')\n                    }\n                    break;\n                case 'years':\n                    var decade = dp.getDecade(this.d.date);\n                    if (!this.d._isInRange(new Date(decade[0] - 1, 0, 1), 'year')) {\n                        this._disableNav('prev')\n                    }\n                    if (!this.d._isInRange(new Date(decade[1] + 1, 0, 1), 'year')) {\n                        this._disableNav('next')\n                    }\n                    break;\n            }\n        },\n\n        _disableNav: function (nav) {\n            $('[data-action=\"' + nav + '\"]', this.d.$nav).addClass('-disabled-')\n        },\n\n        _activateNav: function (nav) {\n            $('[data-action=\"' + nav + '\"]', this.d.$nav).removeClass('-disabled-')\n        },\n\n        _onClickNavButton: function (e) {\n            var $el = $(e.target).closest('[data-action]'),\n                action = $el.data('action');\n\n            this.d[action]();\n        },\n\n        _onClickNavTitle: function (e) {\n            if ($(e.target).hasClass('-disabled-')) return;\n\n            if (this.d.view == 'days') {\n                return this.d.view = 'months'\n            }\n\n            this.d.view = 'years';\n        }\n    }\n\n})();\n\n;(function () {\n    var template = '<div class=\"datepicker--time\">' +\n        '<div class=\"datepicker--time-current\">' +\n        '   <span class=\"datepicker--time-current-hours\">#{hourVisible}</span>' +\n        '   <span class=\"datepicker--time-current-colon\">:</span>' +\n        '   <span class=\"datepicker--time-current-minutes\">#{minValue}</span>' +\n        '</div>' +\n        '<div class=\"datepicker--time-sliders\">' +\n        '   <div class=\"datepicker--time-row\">' +\n        '      <input type=\"range\" name=\"hours\" value=\"#{hourValue}\" min=\"#{hourMin}\" max=\"#{hourMax}\" step=\"#{hourStep}\"/>' +\n        '   </div>' +\n        '   <div class=\"datepicker--time-row\">' +\n        '      <input type=\"range\" name=\"minutes\" value=\"#{minValue}\" min=\"#{minMin}\" max=\"#{minMax}\" step=\"#{minStep}\"/>' +\n        '   </div>' +\n        '</div>' +\n        '</div>',\n        datepicker = $.fn.datepicker,\n        dp = datepicker.Constructor;\n\n    datepicker.Timepicker = function (inst, opts) {\n        this.d = inst;\n        this.opts = opts;\n\n        this.init();\n    };\n\n    datepicker.Timepicker.prototype = {\n        init: function () {\n            var input = 'input';\n            this._setTime(this.d.date);\n            this._buildHTML();\n\n            if (navigator.userAgent.match(/trident/gi)) {\n                input = 'change';\n            }\n\n            this.d.$el.on('selectDate', this._onSelectDate.bind(this));\n            this.$ranges.on(input, this._onChangeRange.bind(this));\n            this.$ranges.on('mouseup', this._onMouseUpRange.bind(this));\n            this.$ranges.on('mousemove focus ', this._onMouseEnterRange.bind(this));\n            this.$ranges.on('mouseout blur', this._onMouseOutRange.bind(this));\n        },\n\n        _setTime: function (date) {\n            var _date = dp.getParsedDate(date);\n\n            this._handleDate(date);\n            this.hours = _date.hours < this.minHours ? this.minHours : _date.hours;\n            this.minutes = _date.minutes < this.minMinutes ? this.minMinutes : _date.minutes;\n        },\n\n        /**\n         * Sets minHours and minMinutes from date (usually it's a minDate)\n         * Also changes minMinutes if current hours are bigger then @date hours\n         * @param date {Date}\n         * @private\n         */\n        _setMinTimeFromDate: function (date) {\n            this.minHours = date.getHours();\n            this.minMinutes = date.getMinutes();\n\n            // If, for example, min hours are 10, and current hours are 12,\n            // update minMinutes to default value, to be able to choose whole range of values\n            if (this.d.lastSelectedDate) {\n                if (this.d.lastSelectedDate.getHours() > date.getHours()) {\n                    this.minMinutes = this.opts.minMinutes;\n                }\n            }\n        },\n\n        _setMaxTimeFromDate: function (date) {\n            this.maxHours = date.getHours();\n            this.maxMinutes = date.getMinutes();\n\n            if (this.d.lastSelectedDate) {\n                if (this.d.lastSelectedDate.getHours() < date.getHours()) {\n                    this.maxMinutes = this.opts.maxMinutes;\n                }\n            }\n        },\n\n        _setDefaultMinMaxTime: function () {\n            var maxHours = 23,\n                maxMinutes = 59,\n                opts = this.opts;\n\n            this.minHours = opts.minHours < 0 || opts.minHours > maxHours ? 0 : opts.minHours;\n            this.minMinutes = opts.minMinutes < 0 || opts.minMinutes > maxMinutes ? 0 : opts.minMinutes;\n            this.maxHours = opts.maxHours < 0 || opts.maxHours > maxHours ? maxHours : opts.maxHours;\n            this.maxMinutes = opts.maxMinutes < 0 || opts.maxMinutes > maxMinutes ? maxMinutes : opts.maxMinutes;\n        },\n\n        /**\n         * Looks for min/max hours/minutes and if current values\n         * are out of range sets valid values.\n         * @private\n         */\n        _validateHoursMinutes: function (date) {\n            if (this.hours < this.minHours) {\n                this.hours = this.minHours;\n            } else if (this.hours > this.maxHours) {\n                this.hours = this.maxHours;\n            }\n\n            if (this.minutes < this.minMinutes) {\n                this.minutes = this.minMinutes;\n            } else if (this.minutes > this.maxMinutes) {\n                this.minutes = this.maxMinutes;\n            }\n        },\n\n        _buildHTML: function () {\n            var lz = dp.getLeadingZeroNum,\n                data = {\n                    hourMin: this.minHours,\n                    hourMax: lz(this.maxHours),\n                    hourStep: this.opts.hoursStep,\n                    hourValue: this.hours,\n                    hourVisible: lz(this.displayHours),\n                    minMin: this.minMinutes,\n                    minMax: lz(this.maxMinutes),\n                    minStep: this.opts.minutesStep,\n                    minValue: lz(this.minutes)\n                },\n                _template = dp.template(template, data);\n\n            this.$timepicker = $(_template).appendTo(this.d.$datepicker);\n            this.$ranges = $('[type=\"range\"]', this.$timepicker);\n            this.$hours = $('[name=\"hours\"]', this.$timepicker);\n            this.$minutes = $('[name=\"minutes\"]', this.$timepicker);\n            this.$hoursText = $('.datepicker--time-current-hours', this.$timepicker);\n            this.$minutesText = $('.datepicker--time-current-minutes', this.$timepicker);\n\n            if (this.d.ampm) {\n                this.$ampm = $('<span class=\"datepicker--time-current-ampm\">')\n                    .appendTo($('.datepicker--time-current', this.$timepicker))\n                    .html(this.dayPeriod);\n\n                this.$timepicker.addClass('-am-pm-');\n            }\n        },\n\n        _updateCurrentTime: function () {\n            var h =  dp.getLeadingZeroNum(this.displayHours),\n                m = dp.getLeadingZeroNum(this.minutes);\n\n            this.$hoursText.html(h);\n            this.$minutesText.html(m);\n\n            if (this.d.ampm) {\n                this.$ampm.html(this.dayPeriod);\n            }\n        },\n\n        _updateRanges: function () {\n            this.$hours.attr({\n                min: this.minHours,\n                max: this.maxHours\n            }).val(this.hours);\n\n            this.$minutes.attr({\n                min: this.minMinutes,\n                max: this.maxMinutes\n            }).val(this.minutes)\n        },\n\n        /**\n         * Sets minHours, minMinutes etc. from date. If date is not passed, than sets\n         * values from options\n         * @param [date] {object} - Date object, to get values from\n         * @private\n         */\n        _handleDate: function (date) {\n            this._setDefaultMinMaxTime();\n            if (date) {\n                if (dp.isSame(date, this.d.opts.minDate)) {\n                    this._setMinTimeFromDate(this.d.opts.minDate);\n                } else if (dp.isSame(date, this.d.opts.maxDate)) {\n                    this._setMaxTimeFromDate(this.d.opts.maxDate);\n                }\n            }\n\n            this._validateHoursMinutes(date);\n        },\n\n        update: function () {\n            this._updateRanges();\n            this._updateCurrentTime();\n        },\n\n        /**\n         * Calculates valid hour value to display in text input and datepicker's body.\n         * @param date {Date|Number} - date or hours\n         * @param [ampm] {Boolean} - 12 hours mode\n         * @returns {{hours: *, dayPeriod: string}}\n         * @private\n         */\n        _getValidHoursFromDate: function (date, ampm) {\n            var d = date,\n                hours = date;\n\n            if (date instanceof Date) {\n                d = dp.getParsedDate(date);\n                hours = d.hours;\n            }\n\n            var _ampm = ampm || this.d.ampm,\n                dayPeriod = 'am';\n\n            if (_ampm) {\n                switch(true) {\n                    case hours == 0:\n                        hours = 12;\n                        break;\n                    case hours == 12:\n                        dayPeriod = 'pm';\n                        break;\n                    case hours > 11:\n                        hours = hours - 12;\n                        dayPeriod = 'pm';\n                        break;\n                    default:\n                        break;\n                }\n            }\n\n            return {\n                hours: hours,\n                dayPeriod: dayPeriod\n            }\n        },\n\n        set hours (val) {\n            this._hours = val;\n\n            var displayHours = this._getValidHoursFromDate(val);\n\n            this.displayHours = displayHours.hours;\n            this.dayPeriod = displayHours.dayPeriod;\n        },\n\n        get hours() {\n            return this._hours;\n        },\n\n        //  Events\n        // -------------------------------------------------\n\n        _onChangeRange: function (e) {\n            var $target = $(e.target),\n                name = $target.attr('name');\n\n            this.d.timepickerIsActive = true;\n\n            this[name] = $target.val();\n            this._updateCurrentTime();\n            this.d._trigger('timeChange', [this.hours, this.minutes]);\n\n            this._handleDate(this.d.lastSelectedDate);\n            this.update()\n        },\n\n        _onSelectDate: function (e, data) {\n            this._handleDate(data);\n            this.update();\n        },\n\n        _onMouseEnterRange: function (e) {\n            var name = $(e.target).attr('name');\n            $('.datepicker--time-current-' + name, this.$timepicker).addClass('-focus-');\n        },\n\n        _onMouseOutRange: function (e) {\n            var name = $(e.target).attr('name');\n            if (this.d.inFocus) return; // Prevent removing focus when mouse out of range slider\n            $('.datepicker--time-current-' + name, this.$timepicker).removeClass('-focus-');\n        },\n\n        _onMouseUpRange: function (e) {\n            this.d.timepickerIsActive = false;\n        }\n    };\n})();\n })(window, jQuery);"]}